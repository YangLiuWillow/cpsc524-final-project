<profile>

<section name = "Vitis HLS Report for 'shortest'" level="0">
<item name = "Date">Wed May  7 22:08:58 2025
</item>
<item name = "Version">2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)</item>
<item name = "Project">cpsc520-bfs-unpartitioned-hls</item>
<item name = "Solution">solution1 (Vivado IP Flow Target)</item>
<item name = "Product family">zynquplus</item>
<item name = "Target device">xczu7ev-ffvc1156-2-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 7.300 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">?, ?, ?, ?, ?, ?, no</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- bfs_loop">?, ?, ?, -, -, 15, no</column>
<column name=" + traverse_neighbors">?, ?, 13 ~ 20, -, -, ?, no</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 671, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">0, -, 1798, 3204, 0</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 424, -</column>
<column name="Register">-, -, 1153, -, -</column>
<specialColumn name="Available">624, 1728, 460800, 230400, 96</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, 1, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="control_s_axi_U">control_s_axi, 0, 0, 310, 552, 0</column>
<column name="input_r_m_axi_U">input_r_m_axi, 0, 0, 710, 1274, 0</column>
<column name="output_r_m_axi_U">output_r_m_axi, 0, 0, 710, 1274, 0</column>
<column name="sqrt_s_axi_U">sqrt_s_axi, 0, 0, 68, 104, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln27_fu_308_p2">+, 0, 0, 12, 4, 1</column>
<column name="add_ln30_fu_326_p2">+, 0, 0, 71, 64, 64</column>
<column name="add_ln31_fu_362_p2">+, 0, 0, 71, 64, 64</column>
<column name="add_ln33_fu_387_p2">+, 0, 0, 71, 64, 64</column>
<column name="add_ln36_1_fu_563_p2">+, 0, 0, 71, 64, 1</column>
<column name="add_ln36_fu_431_p2">+, 0, 0, 71, 64, 64</column>
<column name="add_ln40_fu_482_p2">+, 0, 0, 71, 64, 64</column>
<column name="add_ln43_fu_533_p2">+, 0, 0, 71, 64, 64</column>
<column name="front_1_fu_515_p2">+, 0, 0, 39, 32, 1</column>
<column name="sub_ln36_fu_416_p2">-, 0, 0, 39, 32, 32</column>
<column name="ap_block_state55">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln27_fu_302_p2">icmp, 0, 0, 9, 4, 2</column>
<column name="icmp_ln36_1_fu_462_p2">icmp, 0, 0, 29, 64, 64</column>
<column name="icmp_ln36_fu_412_p2">icmp, 0, 0, 20, 32, 32</column>
<column name="icmp_ln40_fu_507_p2">icmp, 0, 0, 20, 32, 1</column>
<column name="ap_block_state19_io">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state49_io">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">246, 56, 1, 56</column>
<column name="edge_idx_1_reg_259">9, 2, 64, 128</column>
<column name="front_fu_118">9, 2, 32, 64</column>
<column name="input_r_ARADDR">14, 3, 64, 192</column>
<column name="input_r_ARLEN">14, 3, 32, 96</column>
<column name="input_r_blk_n_AR">9, 2, 1, 2</column>
<column name="input_r_blk_n_R">9, 2, 1, 2</column>
<column name="output_r_ARADDR">14, 3, 64, 192</column>
<column name="output_r_AWADDR">26, 5, 64, 320</column>
<column name="output_r_WDATA">20, 4, 32, 128</column>
<column name="output_r_blk_n_AR">9, 2, 1, 2</column>
<column name="output_r_blk_n_AW">9, 2, 1, 2</column>
<column name="output_r_blk_n_B">9, 2, 1, 2</column>
<column name="output_r_blk_n_R">9, 2, 1, 2</column>
<column name="output_r_blk_n_W">9, 2, 1, 2</column>
<column name="step_fu_114">9, 2, 4, 8</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="add_ln27_reg_619">4, 0, 4, 0</column>
<column name="ap_CS_fsm">55, 0, 55, 0</column>
<column name="column_indices_read_reg_605">64, 0, 64, 0</column>
<column name="current_node_reg_630">32, 0, 32, 0</column>
<column name="edge_end_reg_655">32, 0, 32, 0</column>
<column name="edge_idx_1_reg_259">64, 0, 64, 0</column>
<column name="edge_start_reg_647">32, 0, 32, 0</column>
<column name="front_fu_118">32, 0, 32, 0</column>
<column name="icmp_ln36_reg_662">1, 0, 1, 0</column>
<column name="icmp_ln40_reg_708">1, 0, 1, 0</column>
<column name="input_r_addr_1_reg_671">64, 0, 64, 0</column>
<column name="input_r_addr_reg_641">64, 0, 64, 0</column>
<column name="neighbor_reg_690">32, 0, 32, 0</column>
<column name="output_r_addr_1_reg_624">64, 0, 64, 0</column>
<column name="output_r_addr_2_reg_635">64, 0, 64, 0</column>
<column name="output_r_addr_3_read_reg_703">32, 0, 32, 0</column>
<column name="output_r_addr_3_reg_696">64, 0, 64, 0</column>
<column name="output_r_addr_4_reg_712">64, 0, 64, 0</column>
<column name="output_r_addr_reg_610">64, 0, 64, 0</column>
<column name="queue_read_reg_588">64, 0, 64, 0</column>
<column name="row_offsets_read_reg_600">64, 0, 64, 0</column>
<column name="sext_ln36_1_reg_682">64, 0, 64, 0</column>
<column name="src_read_reg_583">32, 0, 32, 0</column>
<column name="step_fu_114">4, 0, 4, 0</column>
<column name="sub_ln36_reg_666">32, 0, 32, 0</column>
<column name="visited_read_reg_594">64, 0, 64, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_control_AWVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_AWREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_AWADDR">in, 6, s_axi, control, scalar</column>
<column name="s_axi_control_WVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_WREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_WDATA">in, 32, s_axi, control, scalar</column>
<column name="s_axi_control_WSTRB">in, 4, s_axi, control, scalar</column>
<column name="s_axi_control_ARVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_ARREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_ARADDR">in, 6, s_axi, control, scalar</column>
<column name="s_axi_control_RVALID">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_RREADY">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_RDATA">out, 32, s_axi, control, scalar</column>
<column name="s_axi_control_RRESP">out, 2, s_axi, control, scalar</column>
<column name="s_axi_control_BVALID">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_BREADY">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_BRESP">out, 2, s_axi, control, scalar</column>
<column name="s_axi_sqrt_AWVALID">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_AWREADY">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_AWADDR">in, 5, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_WVALID">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_WREADY">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_WDATA">in, 32, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_WSTRB">in, 4, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_ARVALID">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_ARREADY">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_ARADDR">in, 5, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_RVALID">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_RREADY">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_RDATA">out, 32, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_RRESP">out, 2, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_BVALID">out, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_BREADY">in, 1, s_axi, sqrt, scalar</column>
<column name="s_axi_sqrt_BRESP">out, 2, s_axi, sqrt, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, shortest, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, shortest, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, shortest, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, shortest, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, shortest, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, shortest, return value</column>
<column name="m_axi_input_r_AWVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWADDR">out, 64, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWLEN">out, 8, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWSIZE">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWBURST">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWLOCK">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWCACHE">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWPROT">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWQOS">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWREGION">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_AWUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WDATA">out, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WSTRB">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WLAST">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_WUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARVALID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARREADY">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARADDR">out, 64, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARID">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARLEN">out, 8, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARSIZE">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARBURST">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARLOCK">out, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARCACHE">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARPROT">out, 3, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARQOS">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARREGION">out, 4, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_ARUSER">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RVALID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RREADY">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RDATA">in, 32, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RLAST">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RUSER">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_RRESP">in, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BVALID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BREADY">out, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BRESP">in, 2, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BID">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_input_r_BUSER">in, 1, m_axi, input_r, pointer</column>
<column name="m_axi_output_r_AWVALID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWREADY">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWADDR">out, 64, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWLEN">out, 8, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWSIZE">out, 3, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWBURST">out, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWLOCK">out, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWCACHE">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWPROT">out, 3, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWQOS">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWREGION">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_AWUSER">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WVALID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WREADY">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WDATA">out, 32, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WSTRB">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WLAST">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_WUSER">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARVALID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARREADY">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARADDR">out, 64, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARID">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARLEN">out, 8, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARSIZE">out, 3, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARBURST">out, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARLOCK">out, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARCACHE">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARPROT">out, 3, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARQOS">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARREGION">out, 4, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_ARUSER">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RVALID">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RREADY">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RDATA">in, 32, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RLAST">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RID">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RUSER">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_RRESP">in, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BVALID">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BREADY">out, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BRESP">in, 2, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BID">in, 1, m_axi, output_r, pointer</column>
<column name="m_axi_output_r_BUSER">in, 1, m_axi, output_r, pointer</column>
</table>
</item>
</section>
</profile>
